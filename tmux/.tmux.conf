# always re-attach or create
new -A -s

# unbind C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix

set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm-256color:RGB"
# set -g status-style 'bg=#333333 fg=#5eacd3'

# nvim :checkhealth
set-option -g focus-events on # for neovim

# bind zoom to prefix+Z(oom)
unbind-key f
# not -n, that breaks normally typing f
bind-key z resize-pane -Z
# find/jump to seesion
# bind C-w new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# bind-key -r f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"
# Open tmux-sessionizer in a popup window instead of fullscreen
bind-key -r f display-popup -E "~/.local/scripts/tmux-sessionizer"

set -s escape-time 0
set -g base-index 1
set -g mouse on
setw -g mode-keys vi


# better reloading
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# kill without confirmation
# bind-key X kill-pane
# prefix+Q kill-window (with confirm)
bind-key Q confirm-before -p "kill-pane #W? (y/n)" kill-pane

# Disable tmux cipboard
# set-option -g set-clipboard off
set -g default-command "reattach-to-user-namespace -l zsh"

# Enable iterm2 shell integration
set-option -g allow-passthrough on

# iterm2 titles
set-option -g set-titles on
set-option -g set-titles-string '#T'

# https://github.com/tmux/tmux/issues/754
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# split window
bind | split-window -h -c "#{pane_current_path}" # below
bind - split-window -v -c "#{pane_current_path}" # side

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind-key m choose-window -F "#{window_index}: #{window_name}" "join-pane -h -t %%"
bind-key M choose-window -F "#{window_index}: #{window_name}" "join-pane -v -t %%"

bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Tmux Plugin Manager
#
# Install TPM if not found
# https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
#
# Key bindings
# prefix + I
#    Installs new plugins from GitHub or any other git repository
#    Refreshes TMUX environment
#prefix + U
#    updates plugin(s)
#prefix + alt + u
#    remove/uninstall plugins not on the plugin list

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'ofirgall/tmux-window-name'
set-option -g @plugin 'b0o/tmux-autoreload'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
